// For those who want the bleeding edge
buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "https://maven.minecraftforge.net/"
        }
        maven {
            name = "jitpack"
            url = "https://jitpack.io/"
        }
    }
    dependencies {
        classpath "com.github.jengelman.gradle.plugins:shadow:4.0.4"
        classpath "com.github.asbyth:ForgeGradle:6f53277"
    }
}
apply plugin: "net.minecraftforge.gradle.forge"
apply plugin: "com.github.johnrengelman.shadow"

version = "2.0"
group= "zone.nora" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "SimpleStats"

sourceCompatibility = targetCompatibility = 1.8

minecraft {
    version = "1.8.9-11.15.1.2318-1.8.9"
    runDir = "run"
    mappings = "stable_22"
}

repositories {
    maven {
        url "https://repo.hypixel.net/repository/Hypixel/"
    }
}

configurations {
    embed
    compile.extendsFrom(embed)
}

dependencies {
    embed 'net.hypixel:HypixelAPI:3.0.0'
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

reobf {
    shadowJar { /*mappingType = 'SEARGE'*/ }
}

shadowJar {
    // shading to prevent compatibility issues with other mods.
    relocate("net.hypixel", "zone.nora.simplestats.libs.net.hypixel")

    // hypixel sucks lol
    exclude("org/**")
    exclude("com/**")
    exclude("mozilla/**")
    exclude("dummyThing")
    exclude("META-INF/**")

    classifier ''
}

jar {
    exclude("META-INF/**")
}

tasks.build.dependsOn shadowJar